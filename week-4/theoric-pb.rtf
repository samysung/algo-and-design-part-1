{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 STIXGeneral-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red217\green11\blue0;\red255\green39\blue18;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 1.\

\b \cf3 QUESTION:
\b0 \cf2 \
In the 2SAT problem, you are given a set of clauses, where each clause is the disjunction of two literals (a literal is a Boolean variable or the negation of a Boolean variable). You are looking for a way to assign a value "true" or "false" to each of the variables so that all clauses are satisfied --- that is, there is at least one true literal in each clause. For this problem, design an algorithm that determines whether or not a given 2SAT instance has a satisfying assignment. (Your algorithm does not need to exhibit a satisfying assignment, just decide whether or not one exists.) Your algorithm should run in 
\f1\fs28 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 O(m+n)
\f0\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  time, where 
\f1\fs28 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 m
\f0\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  and 
\f1\fs28 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 n
\f0\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  are the number of clauses and variables, respectively. [Hint: strongly connected components.]\
\

\b \cf4 ANSWER:\
}